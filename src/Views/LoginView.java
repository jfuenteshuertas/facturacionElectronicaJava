/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.ConnectionDB;
import Models.Empresa;
import Models.Ordenador;
import com.apple.eawt.Application;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import org.apache.commons.codec.binary.Base64;

/**
 *
 * @author javierfuenteshuertas
 */
public class LoginView extends javax.swing.JFrame {

    /**
     * Creates new form LoginView
     */
    private Timer timer= null;
    private int countTimer=0;
    private ArrayList<Empresa> listEmpresa;
    private ConnectionDB conexion;
    private Connection conn;
    private Ordenador ordenador;
    public LoginView() {
        conexion=new ConnectionDB();
        conn=conexion.connect(conn);
        listEmpresa=new ArrayList<Empresa>();
        ordenador=new Ordenador();
        ordenador.setNombreUsuario(System.getProperty("user.name"));
        ordenador.setSistemaOperativo(System.getProperty("os.name"));
        initializeEnterprise();
        initComponents();
        this.getRootPane().setDefaultButton(jbIngresar);
        timer=new Timer(10000,new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                countTimer++; 
                String pathImage="/Images/loginBackground"+String.valueOf(countTimer)+".jpg";
                jlBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource(pathImage))); // NOI18N
                if(countTimer==4)countTimer=0;
            }
        });
        //incializa el timer para cambio de fondo cada 10 segundos
        timer.start();
        initializeEvents();
        for(int i=0;i<listEmpresa.size();i++){
            jcbEmpresas.addItem(listEmpresa.get(i).getNombreComercial());
        }
        String cadena;
        FileReader f;
        File ficheroTemp; 
        try {
            ficheroTemp= new File ("temp.data");
            if(!ficheroTemp.exists()){
                BufferedWriter bwTemp = new BufferedWriter(new FileWriter(ficheroTemp));
            }
            f = new FileReader("temp.data");
            BufferedReader b = new BufferedReader(f);
            cadena=b.readLine();
            if(cadena!=null){
                jcbEmpresas.setSelectedIndex(Integer.parseInt(cadena));
                jtUsuario.setForeground(new Color(0,0,0));
                jtUsuario.setText(new String(Base64.decodeBase64(b.readLine().getBytes())));
                jtPassword.setText(new String(Base64.decodeBase64(b.readLine().getBytes())));
                jcbRecordarUsuario.setSelected(true);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sSistemaOperativo = System.getProperty("os.name");
        if(sSistemaOperativo.equals("Mac OS X")){
            Application application = Application.getApplication();
            Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logoKipu.png"));
            application.setDockIconImage(image);
        }
        else{
            Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logoKipu.png"));
            this.setIconImage(icon);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbEmpresas = new javax.swing.JComboBox();
        jtUsuario = new javax.swing.JTextField();
        jtPassword = new javax.swing.JPasswordField();
        jbSalir = new javax.swing.JButton();
        jbIngresar = new javax.swing.JButton();
        jlLogo = new javax.swing.JLabel();
        jcbRecordarUsuario = new javax.swing.JCheckBox();
        jlBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventas Electr√≥nicas");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setUndecorated(true);
        getContentPane().setLayout(null);

        jcbEmpresas.setFont(new java.awt.Font("AppleGothic", 0, 12)); // NOI18N
        jcbEmpresas.setMaximumSize(new java.awt.Dimension(150, 40));
        jcbEmpresas.setMinimumSize(new java.awt.Dimension(150, 40));
        jcbEmpresas.setPreferredSize(new java.awt.Dimension(150, 40));
        jcbEmpresas.setSize(new java.awt.Dimension(240, 40));
        jcbEmpresas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEmpresasActionPerformed(evt);
            }
        });
        getContentPane().add(jcbEmpresas);
        jcbEmpresas.setBounds(280, 220, 240, 40);

        jtUsuario.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        jtUsuario.setForeground(new java.awt.Color(153, 153, 153));
        jtUsuario.setText("Usuario");
        jtUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtUsuarioFocusLost(evt);
            }
        });
        jtUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtUsuarioMouseClicked(evt);
            }
        });
        getContentPane().add(jtUsuario);
        jtUsuario.setBounds(280, 290, 240, 32);

        jtPassword.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        jtPassword.setText("123456");
        jtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtPasswordFocusGained(evt);
            }
        });
        jtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPasswordMouseClicked(evt);
            }
        });
        getContentPane().add(jtPassword);
        jtPassword.setBounds(280, 330, 240, 32);

        jbSalir.setBackground(new java.awt.Color(255, 255, 255));
        jbSalir.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 0, 0));
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jbSalir);
        jbSalir.setBounds(724, 524, 70, 70);

        jbIngresar.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        jbIngresar.setText("Ingresar");
        jbIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIngresarActionPerformed(evt);
            }
        });
        getContentPane().add(jbIngresar);
        jbIngresar.setBounds(330, 410, 150, 40);

        jlLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/1.jpg"))); // NOI18N
        jlLogo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jlLogo.setMaximumSize(new java.awt.Dimension(350, 150));
        jlLogo.setMinimumSize(new java.awt.Dimension(350, 150));
        jlLogo.setOpaque(true);
        jlLogo.setPreferredSize(new java.awt.Dimension(350, 150));
        jlLogo.setSize(new java.awt.Dimension(350, 115));
        getContentPane().add(jlLogo);
        jlLogo.setBounds(220, 80, 350, 115);

        jcbRecordarUsuario.setFont(new java.awt.Font("AppleGothic", 1, 18)); // NOI18N
        jcbRecordarUsuario.setText("Recodar usuario");
        jcbRecordarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRecordarUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(jcbRecordarUsuario);
        jcbRecordarUsuario.setBounds(280, 370, 240, 27);

        jlBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loginBackground0.jpg"))); // NOI18N
        getContentPane().add(jlBackground);
        jlBackground.setBounds(0, 0, 800, 600);

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtUsuarioMouseClicked
        if(jtUsuario.getText().equals("Usuario")){
            jtUsuario.setText("");
            jtUsuario.setForeground(Color.black);
        }
        else jtUsuario.setForeground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_jtUsuarioMouseClicked

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPasswordMouseClicked
        jtPassword.setText("");
    }//GEN-LAST:event_jtPasswordMouseClicked

    private void jcbEmpresasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEmpresasActionPerformed
        int itemSelect=jcbEmpresas.getSelectedIndex();
        String logo=listEmpresa.get(itemSelect).getLogo();
        jlLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource(logo))); // NOI18N
    }//GEN-LAST:event_jcbEmpresasActionPerformed

    private void jbIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIngresarActionPerformed
        if(jtUsuario.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Debe ingresar un usuario");
            return;
        }
        if(jtPassword.getPassword().length==0){
            JOptionPane.showMessageDialog(this, "Debe ingresar un password");
            return;
        }
        PreparedStatement stmt;
        int idEmpresa=0;
        try {
            stmt = conn.prepareStatement("SELECT isValidAccount(?,?,?) as idEmpresa");
            stmt.setString(1, jtUsuario.getText());
            stmt.setString(2, String.valueOf(jtPassword.getPassword()));
            stmt.setInt(3, listEmpresa.get(jcbEmpresas.getSelectedIndex()).getIdEmpresa());
            ResultSet rs=stmt.executeQuery();
            if(rs.next())idEmpresa= rs.getInt("idEmpresa");
            switch(idEmpresa){
                case -1:JOptionPane.showMessageDialog(null, "El usuario no existe");break;
                case  0:JOptionPane.showMessageDialog(null, "El password es incorrecto");break;
            }
            if(idEmpresa>0){
                //incializamos empresa
                Empresa empresa=new Empresa();
                stmt = conn.prepareStatement("SELECT * from empresa where idEmpresa=?");
                stmt.setInt(1, idEmpresa);
                rs=stmt.executeQuery();
                if(rs.next()){
                    empresa.setIdEmpresa(rs.getInt("idEmpresa"));
                    empresa.setRucEmpresa(rs.getString("rucEmpresa"));
                    empresa.setNombreComercial(rs.getString("nombreComercial"));
                    empresa.setDireccionFiscal(rs.getString("direccionFiscal"));
                    empresa.setUbigeo(rs.getString("ubigeo"));
                    //empresa.setEmail(rs.getString("email"));
                    empresa.setTelefono(rs.getString("telefono"));
                    empresa.setLogo(rs.getString("logo"));
                }
                stmt = conn.prepareStatement("UPDATE cuenta set ultimoAcceso=current_timestamp() where Empresa_idEmpresa=?");
                stmt.setInt(1, idEmpresa);
                stmt.executeUpdate();
                stmt = conn.prepareStatement("SELECT idCuenta from Cuenta where usuario=? and Empresa_idEmpresa=?");
                stmt.setString(1, jtUsuario.getText());
                stmt.setInt(2, idEmpresa);
                rs=stmt.executeQuery();
                int idCuenta = 0;
                if(rs.next())idCuenta=rs.getInt(1);
                stmt.close();
                MainView main=new MainView(empresa,idCuenta);
                this.setVisible(false);
                main.setTitle(empresa.getNombreComercial());
                //Guardar dato de √∫ltimo ingresado
                if(jcbRecordarUsuario.isSelected()){
                    File temp=new File("temp.data");
                    FileWriter w = new FileWriter(temp);
                    BufferedWriter bw = new BufferedWriter(w);
                    PrintWriter wr = new PrintWriter(bw);	
                    wr.write(jcbEmpresas.getSelectedIndex()+"\n");
                    byte[] encoded = Base64.encodeBase64(jtUsuario.getText().getBytes());
                    wr.append(new String(encoded,StandardCharsets.UTF_8));
                    wr.append("\n");
                    String passEncryp=String.valueOf(jtPassword.getPassword());
                    encoded = Base64.encodeBase64(passEncryp.getBytes());
                    wr.append(new String(encoded,StandardCharsets.UTF_8));
                    wr.close();
                    bw.close();
                }
                else{
                    File temp=new File("temp.data");
                    temp.delete();
                    System.out.println("Borrado");
                }
                main.setVisible(true);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jbIngresarActionPerformed

    private void jtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPasswordFocusGained
        jtPassword.setText("");
    }//GEN-LAST:event_jtPasswordFocusGained

    private void jcbRecordarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRecordarUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbRecordarUsuarioActionPerformed

    private void jtUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtUsuarioFocusLost
        if(jtUsuario.getText().length()==0){
            jtUsuario.setForeground(new java.awt.Color(153, 153, 153));
            jtUsuario.setText("Usuario");
        }
    }//GEN-LAST:event_jtUsuarioFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //WikiTeX
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbIngresar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox jcbEmpresas;
    private javax.swing.JCheckBox jcbRecordarUsuario;
    private javax.swing.JLabel jlBackground;
    private javax.swing.JLabel jlLogo;
    private javax.swing.JPasswordField jtPassword;
    private javax.swing.JTextField jtUsuario;
    // End of variables declaration//GEN-END:variables

    private void initializeEnterprise() {
        
        try {
            PreparedStatement stmt=conn.prepareStatement("select idOrdenador from Ordenador where sistemaOperativo=? and nombreUsuario=?");
            stmt.setString(1, ordenador.getSistemaOperativo());
            stmt.setString(2, ordenador.getNombreUsuario());
            ResultSet rs=stmt.executeQuery();
            if(rs.next())ordenador.setIdOrdenador(rs.getInt(1));
            else {
                stmt=conn.prepareStatement("insert into Ordenador (sistemaOperativo,nombreUsuario) values(?,?)");
                stmt.setString(1, ordenador.getSistemaOperativo());
                stmt.setString(2, ordenador.getNombreUsuario());
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Este ordenador no tiene permiso para emitir comprobantes ");
                System.exit(1);
            }
            stmt=conn.prepareStatement("SELECT idEmpresa,nombreComercial,logo FROM empresa e inner join Ordenador_has_Empresa ohe on e.idEmpresa = ohe.Empresa_idEmpresa where ohe.Ordenador_idOrdenador=? order by nombreComercial asc");
            stmt.setInt(1, ordenador.getIdOrdenador());
            rs=stmt.executeQuery();
            while(rs.next()){
                Empresa temEmpresa =new Empresa();
                temEmpresa.setIdEmpresa(rs.getInt("idEmpresa"));
                temEmpresa.setNombreComercial(rs.getString("nombreComercial"));
                temEmpresa.setLogo(rs.getString("logo"));
                listEmpresa.add(temEmpresa); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void initializeEvents() {
        KeyStroke keyEnter=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0,true);
        Action performSave = new AbstractAction("Enter") { 
            public void actionPerformed(ActionEvent e) {     
                jbIngresarActionPerformed(e);
            }
        };
        jbIngresar.getActionMap().put("Ingresar", performSave);
        jbIngresar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(keyEnter, "Ingresar");
    }

    
}
