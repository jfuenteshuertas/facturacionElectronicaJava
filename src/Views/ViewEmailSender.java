/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.ConnectionDB;
import Controllers.Validador;
import Models.CorreoEmpresa;
import com.apple.eawt.Application;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author javierfuenteshuertas
 */

public class ViewEmailSender extends javax.swing.JFrame {

    /**
     * Creates new form ViewEmailSender
     */
    String emailCliente;
    CorreoEmpresa emailEmpresa;
    String pathFile;
    private ConnectionDB conexion;
    private Connection conn;
    private String pathComprbante;
    public ViewEmailSender(CorreoEmpresa email,String emailCliente,String pathFile) {
        
        this.emailEmpresa=email;
        this.pathComprbante=pathFile;
        initComponents();
        emailCliente=emailCliente;
        jlEmail.setText(emailCliente);
        eventosTeclado();
        conexion=new ConnectionDB();
        conn=conexion.connect(conn);
        this.getRootPane().setDefaultButton(jbEnviar);
        String sSistemaOperativo = System.getProperty("os.name");
        if(sSistemaOperativo.equals("Mac OS X")){
            Application application = Application.getApplication();
            Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logoKipu.png"));
            application.setDockIconImage(image);
        }
        else{
            Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/logoKipu.png"));
            this.setIconImage(icon);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgOpcionEmail = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jrbEmailEmpresa = new javax.swing.JRadioButton();
        jrbOtroEmail = new javax.swing.JRadioButton();
        jtEmail = new javax.swing.JTextField();
        jbEnviar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jlEmail = new javax.swing.JLabel();

        setTitle("Enviar Comprobante");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/emailBig.png"))); // NOI18N

        bgOpcionEmail.add(jrbEmailEmpresa);
        jrbEmailEmpresa.setSelected(true);
        jrbEmailEmpresa.setText("Deseo envíar a la dirección guardada en mis datos");

        bgOpcionEmail.add(jrbOtroEmail);
        jrbOtroEmail.setText("Deseo envíar a otra dirección de email");
        jrbOtroEmail.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrbOtroEmailStateChanged(evt);
            }
        });

        jtEmail.setEnabled(false);

        jbEnviar.setText("Enviar");
        jbEnviar.setSelected(true);
        jbEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jlEmail.setText("cliente@suempresa.com");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jrbEmailEmpresa, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jrbOtroEmail, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtEmail))))
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbEmailEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlEmail)
                        .addGap(5, 5, 5)
                        .addComponent(jrbOtroEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbEnviar)
                            .addComponent(jButton2)))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jrbOtroEmailStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrbOtroEmailStateChanged
            if(jrbOtroEmail.isSelected()){
                jtEmail.setEnabled(true);
                jlEmail.setEnabled(false);
            }
            else {
                jlEmail.setEnabled(true);
                jtEmail.setEnabled(false);
            }
    }//GEN-LAST:event_jrbOtroEmailStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cerrarVentana();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnviarActionPerformed
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        enviarEmail();
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jbEnviarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgOpcionEmail;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbEnviar;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JRadioButton jrbEmailEmpresa;
    private javax.swing.JRadioButton jrbOtroEmail;
    private javax.swing.JTextField jtEmail;
    // End of variables declaration//GEN-END:variables

    private void cerrarVentana() {
        this.setVisible(false);
    }
    private  void SendMail() {
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", emailEmpresa.getStarttls());
        props.put("mail.smtp.host", emailEmpresa.getHost());
        props.put("mail.smtp.port", emailEmpresa.getPort());
        String pass;
        try {
            pass = this.getPassword();
            Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(emailEmpresa.getEmail(),pass);
                    }
                });
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(emailEmpresa.getEmail()));
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(emailCliente));
            message.setSubject("Envío de comprobante electrónico");
            BodyPart messageBodyPart = new MimeBodyPart();
            messageBodyPart.setText("Se le ha Emitido de comprobante electrónico");
            Multipart multipart = new MimeMultipart();
            multipart.addBodyPart(messageBodyPart);
            messageBodyPart = new MimeBodyPart();
            DataSource source = new FileDataSource(pathComprbante);
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName(pathComprbante.substring(pathComprbante.length()-12, pathComprbante.length()));
            multipart.addBodyPart(messageBodyPart);
            message.setContent(multipart);
            

            Transport.send(message);
            JOptionPane.showMessageDialog(this, "Su mensaje ha sido enviado");
        }catch (Exception ex) {
            Logger.getLogger(ViewEmailSender.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"ERROR al envíar el email",ex.toString(),JOptionPane.ERROR_MESSAGE);
        }
        
    }

    private void eventosTeclado() {
        KeyStroke keyEnter=KeyStroke.getKeyStroke(com.sun.glass.events.KeyEvent.VK_ENTER, 0,true);
        Action performSend = new AbstractAction("Send") { 
            public void actionPerformed(ActionEvent e) {     
                enviarEmail();
            }
        };
        jbEnviar.getActionMap().put("Send", performSend);
        jbEnviar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(keyEnter, "Send");
    }

    private void enviarEmail() {

        if(jrbEmailEmpresa.isSelected())emailCliente=jlEmail.getText();
        else emailCliente=jtEmail.getText();
        if(!Validador.isEmail(emailCliente)){
            JOptionPane.showMessageDialog(this,"No es un email escrito correctamente");
            return;
        }
        SendMail();
        cerrarVentana();
    }
    private String getPassword(){
        PreparedStatement stmt;
        String pass="";
        try {
            stmt = conn.prepareStatement("select getPassword(?)");
            stmt.setInt(1,emailEmpresa.getEmpresaIdEmpresa());
            ResultSet rs=stmt.executeQuery();
            if(rs.next())pass= rs.getString(1);
        } catch (SQLException ex) {
            Logger.getLogger(Comprobante.class.getName()).log(Level.SEVERE, null, ex);
        }
        return pass;
        
    }
    
}
